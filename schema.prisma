generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_URL")
}

model Session {
  id Int @id @default(autoincrement())
  sessionId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user User? @relation(fields: [userId], references: [id])
  userId Int?

  @@index([userId], name: "userId")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  passwordHash String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessions Session[]
  accounts Account[]
}

model Account { //one user can have multiple accounts with financial data
  id Int @id @default(autoincrement())
  name String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tips Tip[]
  wages Wage[]
  salary Salary[]

  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Tip {
  id Int @id @default(autoincrement())
  date DateTime
  amount Float @default(0)
  hoursWorked Float @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account Account @relation(fields: [accountId], references: [id])
  accountId Int
}

model Wage {
  id Int @id @default(autoincrement())
  startDate DateTime
  endDate DateTime?
  hourly Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account Account @relation(fields: [accountId], references: [id])
  accountId Int
}

model Salary {
  id Int @id @default(autoincrement())
  startDate DateTime
  endDate DateTime?
  salary Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account Account @relation(fields: [accountId], references: [id])
  accountId Int
}